# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['prometheus:9090']

  - job_name: "Node Exporter"
    static_configs:
      - targets: ['monitoring-node-exporter:9100']

  - job_name: "PIS Worker"
    static_configs:
      - targets: ['pis:5000']

  - job_name: "VDU Worker"
    static_configs:
      - targets: ['vdu:5000']

  - job_name: "DDU Worker"
    static_configs:
      - targets: ['ddu:5000']
  - job_name: "rabbitmq"
    static_configs:
      - targets: ["rabbitmq:15692"]
  - job_name: 'waveshare'
    metrics_path: /probe
    params:
      module: [tcp_connect]    # lehet: icmp, tcp_connect vagy http_2xx
    static_configs:
      - targets:
          - 192.168.1.119  # <-- ide a Waveshare IP
          - 192.168.1.204  # <-- ide a Waveshare IP (ha több van)
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115   # <-- itt a Blackbox Exporter címe

